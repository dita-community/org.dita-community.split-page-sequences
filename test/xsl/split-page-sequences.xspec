<?xml version="1.0" encoding="UTF-8"?>
<x:description 
  xmlns:x="http://www.jenitennison.com/xslt/xspec"
  xmlns:sps="urn:ns:dita-community:split-page-sequences"
  xmlns:fo="http://www.w3.org/1999/XSL/Format"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" 
  stylesheet="./test-split-page-sequences.xsl"  
  > 

  <x:scenario label="Split page sequences split on topics within a chapter" focus="Testing splitting">
    <x:context as="element()" 
      href="../resources/xsl-fo/input/base-fo-good-markers.fo"
      select="/*"
      mode="sps:split-page-sequences"
    />  
    <x:expect
      label="Expecting 8 page sequences"
      test="count(//fo:page-sequence) eq 8"
    />
<!--    <x:expect href="../resources/xsl-fo/expected/result-fo-splitting_expected.fo" pending="Not here yet"
      label="Result pages sequences are as they should be."
      select="/*"
    />      
-->  </x:scenario>
  
  <x:scenario label="Split page sequences no split to be done">
    <x:context as="element()" 
      href="../resources/xsl-fo/input/base-fo-no-markers.fo"
      select="/*"
      mode="sps:split-page-sequences"
    />  
    <x:expect href="../resources/xsl-fo/expected/result-fo-no-splitting_expected.fo" 
      label="Result should match input"
      select="/*"
    />      
  </x:scenario>
  <x:scenario label="Test sps:getPageSequenceData">
    <x:scenario label="Test Page Sequence No start/end">
      <x:call function="sps:getPageSequenceData">
        <x:param as="element()" name="context">
          <topic outputclass="foo page-sequence_landscape-pages"/>
        </x:param>
      </x:call>
      <x:expect as="map(*)?" label="Expected map with true/true/landscape-pages"
        select="map{'start' : true(), 'end' : true(), 'layout' : 'landscape-pages'}"/>
    </x:scenario>
    <x:scenario label="Test Page Sequence start">
      <x:call function="sps:getPageSequenceData">
        <x:param as="element()" name="context">
          <topic outputclass="foo page-sequence-start_landscape-pages"/>
        </x:param>
      </x:call>
      <x:expect as="map(*)?" label="Expected map with start true, end false"
        select="map{'start' : true(), 'end' : false(), 'layout' : 'landscape-pages'}"/>
    </x:scenario>
    <x:scenario label="Test Page Sequence end">
      <x:call function="sps:getPageSequenceData">
        <x:param as="element()" name="context">
          <topic outputclass="foo page-sequence-end_landscape-pages"/>
        </x:param>
      </x:call>
      <x:expect as="map(*)?" label="Expected map with start false, end true"
        select="map{'start' : false(), 'end' : true(), 'layout' : 'landscape-pages'}"/>
    </x:scenario>
  </x:scenario>
    
  <x:scenario label="Test error checking">
    <x:scenario label="Good input with markers">
      <x:call function="sps:isMarkersPaired">
        <x:param name="context" href="../resources/xsl-fo/input/base-fo-good-markers.fo" select="/*" as="element()"/>
      </x:call>
      <x:expect test="$x:result" label="Expected true value"/>
    </x:scenario>
    <x:scenario label="Good input without markers">
      <x:call function="sps:isMarkersPaired">
        <x:param name="context" href="../resources/xsl-fo/input/base-fo-no-markers.fo" select="/*" as="element()"/>
      </x:call>
      <x:expect test="$x:result" label="Expected true value"/>
    </x:scenario>
    <x:scenario label="Not paired">
      <x:call function="sps:isMarkersPaired">
        <x:param name="context" href="../resources/xsl-fo/input/base-fo-mismatched-markers.fo" select="/*" as="element()"/>
      </x:call>
      <x:expect test="not($x:result)" label="Expected false value"/>
    </x:scenario>
    <x:scenario label="Mismatched">
      <x:call function="sps:findUnmatchedMarkers">
        <x:param name="context" href="../resources/xsl-fo/input/base-fo-mismatched-markers.fo" select="/*" as="element()"/>
      </x:call>
      <x:expect test="count($x:result) eq 2" label="Expected two unmatched items"/>
    </x:scenario>
  </x:scenario>
  
</x:description>
